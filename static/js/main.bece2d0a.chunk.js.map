{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGoods","goodsName","setState","includes","filter","el","addTitle","length","slice","join","at","removeGoods","this","className","type","onClick","map","goods","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,SAAW,SAACC,GACV,EAAKC,UAAS,YAAwB,IAArBH,EAAoB,EAApBA,cAKf,MAAO,CACLA,cALgBA,EAAcI,SAASF,GACrCF,EAAcK,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,KADrB,sBAETF,GAFS,CAEME,S,EAQ3BK,SAAW,WACT,IAAQP,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcQ,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUR,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcS,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDV,EAAcW,IAAI,M,EAI/EC,YAAc,WACZ,EAAKT,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SAE8B,IAAzBd,EAAcQ,OACX,WACAK,KAAKN,aAKVP,EAAcQ,OAAS,GACtB,mCACE,wBACEO,KAAK,SACLD,UAAU,mBACVE,QAAS,WACP,EAAKJ,eAJT,qBAaN,oBAAIE,UAAU,QAAd,SACGjB,EAAgBoB,KAAI,SAAAC,GAAK,OACxB,qBACEJ,UAAU,cADZ,UAIE,sBAAMA,UAAU,cAAhB,SACGI,IAGH,wBACEH,KAAK,SACLD,UAAS,wBACPd,EAAcI,SAASc,GACnB,0BACA,IAENF,QAAS,WACP,EAAKf,SAASiB,IARlB,SAYKlB,EAAcI,SAASc,GACpB,SACA,aApBHA,e,GAnEDC,IAAMC,WAkGTtB,ICnHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bece2d0a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGoods = (goodsName: string) => {\n    this.setState(({ selectedGoods }) => {\n      const newGoods = (selectedGoods.includes(goodsName))\n        ? selectedGoods.filter(el => el !== goodsName)\n        : [...selectedGoods, goodsName];\n\n      return {\n        selectedGoods: newGoods,\n      };\n    });\n  };\n\n  addTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.at(-1)}`;\n    }\n  };\n\n  removeGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__title\">\n          {\n            (selectedGoods.length === 0)\n              ? 'No goods'\n              : this.addTitle()\n          }\n        </div>\n\n        {\n          (selectedGoods.length > 0) && (\n            <>\n              <button\n                type=\"button\"\n                className=\"app__clearButton\"\n                onClick={() => {\n                  this.removeGoods();\n                }}\n              >\n                Clear\n              </button>\n            </>\n          )\n        }\n\n        <ul className=\"goods\">\n          {goodsFromServer.map(goods => (\n            <li\n              className=\"goods__item\"\n              key={goods}\n            >\n              <span className=\"goods__name\">\n                {goods}\n              </span>\n\n              <button\n                type=\"button\"\n                className={`goods__button ${\n                  selectedGoods.includes(goods)\n                    ? 'goods__button--selected'\n                    : ''\n                }`}\n                onClick={() => {\n                  this.addGoods(goods);\n                }}\n              >\n                {\n                  (selectedGoods.includes(goods))\n                    ? 'remove'\n                    : 'select'\n                }\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}